#
# https://help.github.com/articles/dealing-with-line-endings/
#
# These are explicitly windows files and should use crlf
*.bat           text eol=crlf

## Nope we are going to normalize to lf...
# Normalize EOL for all files that Git considers text files.
* text=auto eol=lf

## TODO: Condense & Correct this. Some rules are either conflicting or possible undesirable.

## Begin Custom Preamble ##

## Nope we are going to normalize to lf...
* text=auto eol=lf

## End Custom Preamble ##

## Begin GitHub Docs Recommendations ##

## Nope we are going to normalize to lf...
# Set the default behavior, in case people don't have core.autocrlf set.
* text=auto eol=lf

# Explicitly declare text files you want to always be normalized and converted
# to native line endings on checkout.
*.c text
*.h text

## Nope we are going to normalize to lf...
# Declare files that will always have CRLF line endings on checkout.
*.sln text=auto eol=lf

# Denote all files that are truly binary and should not be modified.
*.png binary
*.jpg binary

## Begin GitHub Docs Recommendations ##

## Begin Dotnet FSharp ##

## Nope we are going to normalize to lf...
# Auto detect text files and perform LF normalization
* text=auto eol=lf

# Custom for Visual Studio
*.cs     text diff=csharp
*.sln    text eol=crlf merge=union
*.csproj text merge=union
*.vbproj text merge=union
*.fsproj text merge=union
*.dbproj text merge=union

# Standard to msysgit
*.doc	 diff=astextplain
*.DOC	 diff=astextplain
*.docx diff=astextplain
*.DOCX diff=astextplain
*.dot  diff=astextplain
*.DOT  diff=astextplain
*.pdf  diff=astextplain
*.PDF	 diff=astextplain
*.rtf	 diff=astextplain
*.RTF	 diff=astextplain

mono/launcher text eol=lf
mono/config.make text eol=lf
targets.make text eol=lf

*.sh text eol=lf

*.bsl linguist-vendored=true
*.xlf linguist-generated=true

*.png binary

## End Dotnet FSharp ##

## Unity ##

*.cs diff=csharp text
*.cginc text
*.shader text

*.mat merge=unityyamlmerge eol=lf
*.anim merge=unityyamlmerge eol=lf
*.unity merge=unityyamlmerge eol=lf
*.prefab merge=unityyamlmerge eol=lf
*.physicsMaterial2D merge=unityyamlmerge eol=lf
*.physicMaterial merge=unityyamlmerge eol=lf
*.asset merge=unityyamlmerge eol=lf
*.meta merge=unityyamlmerge eol=lf
*.controller merge=unityyamlmerge eol=lf

## End Unity ##

## Nope we are going to normalize to lf...
## Begin Generic ##
# Handle line endings automatically for files detected as text
# and leave all files detected as binary untouched.
* text=auto eol=lf

#
# The above will handle all files NOT found below
#
# These files are text and should be normalized (Convert crlf => lf)
*.css           eol=lf
*.df            eol=lf
*.htm           eol=lf
*.html          eol=lf
*.java          eol=lf
*.js            eol=lf
*.json          eol=lf
*.jsp           eol=lf
*.jspf          eol=lf
*.jspx          eol=lf
*.properties    eol=lf
*.sh            eol=lf
*.tld           eol=lf
*.txt           eol=lf
*.tag           eol=lf
*.tagx          eol=lf
*.xml           eol=lf
*.yml           eol=lf

# These files are binary and should be left untouched
# (binary is a macro for -text -diff)
*.class         binary
*.dll           binary
*.ear           binary
*.gif           binary
*.ico           binary
*.jar           binary
*.jpg           binary
*.jpeg          binary
*.png           binary
*.so            binary
*.war           binary

## End Generic ##

## Begin Gitattributes Best Practices

###############################
# Git Line Endings            #
###############################

## Nope we are going to normalize to lf...
# Set default behaviour to automatically normalize line endings.
* text=auto eol=lf

# Force batch scripts to always use CRLF line endings so that if a repo is accessed
# in Windows via a file share from Linux, the scripts will work.
*.{cmd,[cC][mM][dD]} text eol=crlf
*.{bat,[bB][aA][tT]} text eol=crlf

# Force bash scripts to always use LF line endings so that if a repo is accessed
# in Unix via a file share from Windows, the scripts will work.
*.sh text eol=lf

# ###############################
# # Git Large File System (LFS) #
# ###############################

# # Archives
# *.7z filter=lfs diff=lfs merge=lfs -text
# *.br filter=lfs diff=lfs merge=lfs -text
# *.gz filter=lfs diff=lfs merge=lfs -text
# *.tar filter=lfs diff=lfs merge=lfs -text
# *.zip filter=lfs diff=lfs merge=lfs -text

# # Documents
# *.pdf filter=lfs diff=lfs merge=lfs -text

# # Images
# *.gif filter=lfs diff=lfs merge=lfs -text
# *.ico filter=lfs diff=lfs merge=lfs -text
# *.jpg filter=lfs diff=lfs merge=lfs -text
# *.pdf filter=lfs diff=lfs merge=lfs -text
# *.psd filter=lfs diff=lfs merge=lfs -text
# *.webp filter=lfs diff=lfs merge=lfs -text

# # Fonts
# *.woff2 filter=lfs diff=lfs merge=lfs -text

# # Other
# *.exe filter=lfs diff=lfs merge=lfs -text

## End Gitattributes Best Practices

## Begin Gitattributes.io ##

# Sources
*.c     text diff=c
*.cc    text diff=cpp
*.cxx   text diff=cpp
*.cpp   text diff=cpp
*.c++   text diff=cpp
*.hpp   text diff=cpp
*.h     text diff=c
*.h++   text diff=cpp
*.hh    text diff=cpp

# Compiled Object files
*.slo   binary
*.lo    binary
*.o     binary
*.obj   binary

# Precompiled Headers
*.gch   binary
*.pch   binary

# Compiled Dynamic libraries
*.so    binary
*.dylib binary
*.dll   binary

# Compiled Static libraries
*.lai   binary
*.la    binary
*.a     binary
*.lib   binary

# Executables
*.exe   binary
*.out   binary
*.app   binary
# Common settings that generally should always be used with your language specific settings

## Nope we are going to normalize to lf...
# Auto detect text files and perform LF normalization
# https://www.davidlaing.com/2012/09/19/customise-your-gitattributes-to-become-a-git-ninja/
*          text=auto eol=lf

#
# The above will handle all files NOT found below
#

# Documents
*.bibtex   text diff=bibtex
*.doc	        diff=astextplain
*.DOC	        diff=astextplain
*.docx          diff=astextplain
*.DOCX          diff=astextplain
*.dot           diff=astextplain
*.DOT           diff=astextplain
*.pdf           diff=astextplain
*.PDF           diff=astextplain
*.rtf           diff=astextplain
*.RTF	        diff=astextplain
*.md       text
*.tex      text diff=tex
*.adoc     text
*.textile  text
*.mustache text
*.csv      text
*.tab      text
*.tsv      text
*.txt      text
*.sql      text

# Graphics
*.png      binary
*.jpg      binary
*.jpeg     binary
*.gif      binary
*.tif      binary
*.tiff     binary
*.ico      binary
# SVG treated as an asset (binary) by default.
*.svg      text
# If you want to treat it as binary,
# use the following line instead.
# *.svg    binary
*.eps      binary

# Scripts
*.bash     text eol=lf
*.fish     text eol=lf
*.sh       text eol=lf
# These are explicitly windows files and should use crlf
*.bat      text eol=crlf
*.cmd      text eol=crlf
*.ps1      text eol=crlf

# Serialisation
*.json     text
*.toml     text
*.xml      text
*.yaml     text
*.yml      text

# Archives
*.7z       binary
*.gz       binary
*.tar      binary
*.tgz      binary
*.zip      binary

# Text files where line endings should be preserved
*.patch    -text

#
# Exclude files from exporting
#

.gitattributes export-ignore
.gitignore     export-ignore


## Nope we are going to normalize to lf...
# Auto detect text files and perform LF normalization
# https://www.davidlaing.com/2012/09/19/customise-your-gitattributes-to-become-a-git-ninja/
*    text=auto eol=lf

*.cs text diff=csharp


## Nope we are going to normalize to lf...
# Handle line endings automatically for files detected as text
# and leave all files detected as binary untouched.
*     text=auto eol=lf

# Fortran files
*.f   text diff=fortran
*.for text diff=fortran
*.f90 text diff=fortran
*.f95 text diff=fortran
*.f03 text diff=fortran
# Treat all Go files in this repo as binary, with no git magic updating
# line endings. Windows users contributing to Go will need to use a
# modern version of git and editors capable of LF line endings.

*.go -text diff=golang
# Java sources
*.java          text diff=java
*.gradle        text diff=java
*.gradle.kts    text diff=java

# These files are text and should be normalized (Convert crlf => lf)
*.css           text diff=css
*.df            text
*.htm           text diff=html
*.html          text diff=html
*.js            text
*.jsp           text
*.jspf          text
*.jspx          text
*.properties    text
*.tld           text
*.tag           text
*.tagx          text
*.xml           text

# These files are binary and should be left untouched
# (binary is a macro for -text -diff)
*.class         binary
*.dll           binary
*.ear           binary
*.jar           binary
*.so            binary
*.war           binary
# Basic .gitattributes for a Lua repo.

# Source files
# ============
*.lua       text

# Luadoc output
# =============
*.html      text diff=html
*.css       text diff=css
# Basic .gitattributes for a MATLAB repo.
# This template includes Simulink and MuPAD extensions, in addition
# to the MATLAB extensions.

# Source files
# ============
*.m             text diff=matlab
*.mu            text diff=matlab

# Caution: *.m also matches Mathematica packages.

# Binary files
# ============
*.p             binary
*.mex*          binary
*.fig           binary
*.mat           binary
*.mdl           binary
*.slx           binary
*.mdlp          binary
*.slxp          binary
*.sldd          binary
*.mltbx         binary
*.mlappinstall  binary
*.mlpkginstall  binary
*.mn            binary
# compare .pbxproj files as binary and always merge as union
*.pbxproj binary -merge=union
*.m       text diff=objc
# Basic .gitattributes for a python repo.

# Source files
# ============
*.pxd    text diff=python
*.py     text diff=python
*.py3    text diff=python
*.pyw    text diff=python
*.pyx    text diff=python
*.pyz    text diff=python

# Binary files
# ============
*.db     binary
*.p      binary
*.pkl    binary
*.pickle binary
*.pyc    binary
*.pyd    binary
*.pyo    binary

# Jupyter notebook
*.ipynb  text

# Note: .db, .p, and .pkl files are associated
# with the python modules ``pickle``, ``dbm.*``,
# ``shelve``, ``marshal``, ``anydbm``, & ``bsddb``
# (among others).
# These settings are for Ruby On Rails project
#
#
# Define a dummy ours merge strategy with:
#
# $ git config --global merge.ours.driver true
schema.rb merge=ours diff=ruby
# Swift gitattributes
*.pbxproj merge=union
*.swift   text diff=swift
# Unity
*.cginc              text
*.cs                 text diff=csharp
*.shader             text

# Unity YAML
*.mat                merge=unityyamlmerge eol=lf
*.anim               merge=unityyamlmerge eol=lf
*.unity              merge=unityyamlmerge eol=lf
*.prefab             merge=unityyamlmerge eol=lf
*.asset              merge=unityyamlmerge eol=lf
*.meta               merge=unityyamlmerge eol=lf
*.controller         merge=unityyamlmerge eol=lf

# "physic" for 3D but "physics" for 2D
*.physicMaterial2D   merge=unityyamlmerge eol=lf
*.physicMaterial     merge=unityyamlmerge eol=lf
*.physicsMaterial2D  merge=unityyamlmerge eol=lf
*.physicsMaterial    merge=unityyamlmerge eol=lf

# Using Git LFS
# Add diff=lfs merge=lfs to the binary files

# Unity LFS
*.cubemap            binary
*.unitypackage       binary

# 3D models
*.3dm                binary
*.3ds                binary
*.blend              binary
*.c4d                binary
*.collada            binary
*.dae                binary
*.dxf                binary
*.FBX                binary
*.fbx                binary
*.jas                binary
*.lws                binary
*.lxo                binary
*.ma                 binary
*.max                binary
*.mb                 binary
*.obj                binary
*.ply                binary
*.skp                binary
*.stl                binary
*.ztl                binary

# Audio
*.aif                binary
*.aiff               binary
*.it                 binary
*.mod                binary
*.mp3                binary
*.ogg                binary
*.s3m                binary
*.wav                binary
*.xm                 binary

# Video
*.asf                binary
*.avi                binary
*.flv                binary
*.mov                binary
*.mp4                binary
*.mpeg               binary
*.mpg                binary
*.ogv                binary
*.wmv                binary

# Images
*.bmp                binary
*.exr                binary
*.gif                binary
*.hdr                binary
*.iff                binary
*.jpeg               binary
*.jpg                binary
*.pict               binary
*.png                binary
*.psd                binary
*.tga                binary
*.tif                binary
*.tiff               binary

# Compressed Archive
*.7z                binary
*.bz2               binary
*.gz                binary
*.rar               binary
*.tar               binary
*.zip               binary

# Compiled Dynamic Library
*.dll               binary
*.pdb               binary
*.so                binary

# Fonts
*.otf               binary
*.ttf               binary

# Executable/Installer
*.apk               binary
*.exe               binary

# Documents
*.pdf               binary

# ETC
*.a                 binary
*.rns               binary
*.reason            binary

# Collapse Unity-generated files on GitHub
*.asset             linguist-generated
*.mat               linguist-generated
*.meta              linguist-generated
*.prefab            linguist-generated
*.unity             linguist-generated

## Nope we are going to normalize to lf...
###############################################################################
# Set default behavior to automatically normalize line endings.
###############################################################################
*            text=auto eol=lf

###############################################################################
# Set the merge driver for project and solution files
#
# Merging from the command prompt will add diff markers to the files if there
# are conflicts (Merging from VS is not affected by the settings below, in VS
# the diff markers are never inserted). Diff markers may cause the following
# file extensions to fail to load in VS. An alternative would be to treat
# these files as binary and thus will always conflict and require user
# intervention with every merge. To do so, just comment the entries below and
# uncomment the group further below
###############################################################################

*.sln        text eol=crlf
*.csproj     text eol=crlf
*.vbproj     text eol=crlf
*.vcxproj    text eol=crlf
*.vcproj     text eol=crlf
*.dbproj     text eol=crlf
*.fsproj     text eol=crlf
*.lsproj     text eol=crlf
*.wixproj    text eol=crlf
*.modelproj  text eol=crlf
*.sqlproj    text eol=crlf
*.wmaproj    text eol=crlf

*.xproj      text eol=crlf
*.props      text eol=crlf
*.filters    text eol=crlf
*.vcxitems   text eol=crlf


#*.sln       merge=binary
#*.csproj    merge=binary
#*.vbproj    merge=binary
#*.vcxproj   merge=binary
#*.vcproj    merge=binary
#*.dbproj    merge=binary
#*.fsproj    merge=binary
#*.lsproj    merge=binary
#*.wixproj   merge=binary
#*.modelproj merge=binary
#*.sqlproj   merge=binary
#*.wwaproj   merge=binary

#*.xproj     merge=binary
#*.props     merge=binary
#*.filters   merge=binary
#*.vcxitems  merge=binary
## GITATTRIBUTES FOR WEB PROJECTS
#
# These settings are for any web project.
#
# Details per file setting:
#   text    These files should be normalized (i.e. convert CRLF to LF).
#   binary  These files are binary and should be left untouched.
#
# Note that binary is a macro for -text -diff.
######################################################################

## Nope we are going to normalize to lf...
# Auto detect
##   Handle line endings automatically for files detected as
##   text and leave all files detected as binary untouched.
##   This will handle all files NOT defined below.
*                 text=auto eol=lf

# Source code
*.bash            text eol=lf
*.bat             text eol=crlf
*.cmd             text eol=crlf
*.coffee          text
*.css             text
*.htm             text diff=html
*.html            text diff=html
*.inc             text
*.ini             text
*.js              text
*.json            text
*.jsx             text
*.less            text
*.ls              text
*.map             text -diff
*.od              text
*.onlydata        text
*.php             text diff=php
*.pl              text
*.ps1             text eol=crlf
*.py              text diff=python
*.rb              text diff=ruby
*.sass            text
*.scm             text
*.scss            text diff=css
*.sh              text eol=lf
*.sql             text
*.styl            text
*.tag             text
*.ts              text
*.tsx             text
*.xml             text
*.xhtml           text diff=html

# Docker
Dockerfile        text

# Documentation
*.ipynb           text
*.markdown        text
*.md              text
*.mdwn            text
*.mdown           text
*.mkd             text
*.mkdn            text
*.mdtxt           text
*.mdtext          text
*.txt             text
AUTHORS           text
CHANGELOG         text
CHANGES           text
CONTRIBUTING      text
COPYING           text
copyright         text
*COPYRIGHT*       text
INSTALL           text
license           text
LICENSE           text
NEWS              text
readme            text
*README*          text
TODO              text

# Templates
*.dot             text
*.ejs             text
*.haml            text
*.handlebars      text
*.hbs             text
*.hbt             text
*.jade            text
*.latte           text
*.mustache        text
*.njk             text
*.phtml           text
*.tmpl            text
*.tpl             text
*.twig            text
*.vue             text

# Configs
*.cnf             text
*.conf            text
*.config          text
.editorconfig     text
.env              text
.gitattributes    text
.gitconfig        text
.htaccess         text
*.lock            text -diff
package-lock.json text -diff
*.toml            text
*.yaml            text
*.yml             text
browserslist      text
Makefile          text
makefile          text

# Heroku
Procfile          text

# Graphics
*.ai              binary
*.bmp             binary
*.eps             binary
*.gif             binary
*.gifv            binary
*.ico             binary
*.jng             binary
*.jp2             binary
*.jpg             binary
*.jpeg            binary
*.jpx             binary
*.jxr             binary
*.pdf             binary
*.png             binary
*.psb             binary
*.psd             binary
# SVG treated as an asset (binary) by default.
*.svg             text
# If you want to treat it as binary,
# use the following line instead.
# *.svg           binary
*.svgz            binary
*.tif             binary
*.tiff            binary
*.wbmp            binary
*.webp            binary

# Audio
*.kar             binary
*.m4a             binary
*.mid             binary
*.midi            binary
*.mp3             binary
*.ogg             binary
*.ra              binary

# Video
*.3gpp            binary
*.3gp             binary
*.as              binary
*.asf             binary
*.asx             binary
*.fla             binary
*.flv             binary
*.m4v             binary
*.mng             binary
*.mov             binary
*.mp4             binary
*.mpeg            binary
*.mpg             binary
*.ogv             binary
*.swc             binary
*.swf             binary
*.webm            binary

# Archives
*.7z              binary
*.gz              binary
*.jar             binary
*.rar             binary
*.tar             binary
*.zip             binary

# Fonts
*.ttf             binary
*.eot             binary
*.otf             binary
*.woff            binary
*.woff2           binary

# Executables
*.exe             binary
*.pyc             binary

# RC files (like .babelrc or .eslintrc)
*.*rc             text

# Ignore files (like .npmignore or .gitignore)
*.*ignore         text

## End Gitattributes.io ##

## Begin Custom Override ##

# * text eol=lf
## Nope we are going to normalize to lf...
# Normalize EOL for all files that Git considers text files.
* text=auto eol=lf

## End Custom Override ##
## End Even More .gitignore
